package br.edu.acad.ifma.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SegmentoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSegmentoAllPropertiesEquals(Segmento expected, Segmento actual) {
        assertSegmentoAutoGeneratedPropertiesEquals(expected, actual);
        assertSegmentoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSegmentoAllUpdatablePropertiesEquals(Segmento expected, Segmento actual) {
        assertSegmentoUpdatableFieldsEquals(expected, actual);
        assertSegmentoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSegmentoAutoGeneratedPropertiesEquals(Segmento expected, Segmento actual) {
        assertThat(actual)
            .as("Verify Segmento auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSegmentoUpdatableFieldsEquals(Segmento expected, Segmento actual) {
        assertThat(actual)
            .as("Verify Segmento relevant properties")
            .satisfies(a -> assertThat(a.getNome()).as("check nome").isEqualTo(expected.getNome()))
            .satisfies(a -> assertThat(a.getDescricao()).as("check descricao").isEqualTo(expected.getDescricao()))
            .satisfies(a -> assertThat(a.getCanalEnvio()).as("check canalEnvio").isEqualTo(expected.getCanalEnvio()))
            .satisfies(a -> assertThat(a.getAgendamentoId()).as("check agendamentoId").isEqualTo(expected.getAgendamentoId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSegmentoUpdatableRelationshipsEquals(Segmento expected, Segmento actual) {
        assertThat(actual)
            .as("Verify Segmento relationships")
            .satisfies(a -> assertThat(a.getAgendamento()).as("check agendamento").isEqualTo(expected.getAgendamento()));
    }
}
