package br.edu.acad.ifma.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MensagemEnviadaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMensagemEnviadaAllPropertiesEquals(MensagemEnviada expected, MensagemEnviada actual) {
        assertMensagemEnviadaAutoGeneratedPropertiesEquals(expected, actual);
        assertMensagemEnviadaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMensagemEnviadaAllUpdatablePropertiesEquals(MensagemEnviada expected, MensagemEnviada actual) {
        assertMensagemEnviadaUpdatableFieldsEquals(expected, actual);
        assertMensagemEnviadaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMensagemEnviadaAutoGeneratedPropertiesEquals(MensagemEnviada expected, MensagemEnviada actual) {
        assertThat(actual)
            .as("Verify MensagemEnviada auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMensagemEnviadaUpdatableFieldsEquals(MensagemEnviada expected, MensagemEnviada actual) {
        assertThat(actual)
            .as("Verify MensagemEnviada relevant properties")
            .satisfies(a -> assertThat(a.getDataEnvio()).as("check dataEnvio").isEqualTo(expected.getDataEnvio()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getClienteId()).as("check clienteId").isEqualTo(expected.getClienteId()))
            .satisfies(a -> assertThat(a.getTemplateId()).as("check templateId").isEqualTo(expected.getTemplateId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMensagemEnviadaUpdatableRelationshipsEquals(MensagemEnviada expected, MensagemEnviada actual) {
        assertThat(actual)
            .as("Verify MensagemEnviada relationships")
            .satisfies(a -> assertThat(a.getCliente()).as("check cliente").isEqualTo(expected.getCliente()))
            .satisfies(a -> assertThat(a.getTemplate()).as("check template").isEqualTo(expected.getTemplate()));
    }
}
